import os

import pandas
import streamlit as st
from pandas import DataFrame

from dao.models.workstation import Workstation
from dao.utils.implemented import workstation_service
from dotenv import load_dotenv

# Page settings
# ----------------------------------------------------------------------------------------------------------------------
st.set_page_config(
    layout='wide'
)
load_dotenv()

# Get data
# ----------------------------------------------------------------------------------------------------------------------
workstations: list[Workstation] = workstation_service.get_all()

df: DataFrame = pandas.DataFrame([(
    workstation.id,
    workstation.name,
    workstation.ip_address,
    workstation.mac_address,
) for workstation in workstations],
    columns=[
        'ID',
        '–ò–º—è',
        'IP –∞–¥—Ä–µ—Å',
        'MAC –∞–¥—Ä–µ—Å',
    ])

# Main block
# ----------------------------------------------------------------------------------------------------------------------
st.title('–°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç')
st.dataframe(
    df,
    use_container_width=True,
    hide_index=True
)

# Admin block
# ------------------------------------------------------------------------------
st.divider()
st.title('–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')

with st.expander('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ê–†–ú'):
    create, update, delete = st.columns(3)

    # Create table
    # --------------------------------------------------------------------------
    with create:
        st.header('–î–æ–±–∞–≤–∏—Ç—å')

        with st.form(key='add_form'):
            workstation_name: str = st.text_input(
                '–ò–º—è –ê–†–ú',
                key='workstation_name'
            )
            ip_address: str = st.text_input(
                'IP –∞–¥—Ä–µ—Å',
                key='ip_address'
            )
            mac_address: str = st.text_input(
                'MAC –∞–¥—Ä–µ—Å',
                key='mac_address'
            )
            admin_password: str = st.text_input(
                '–ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
                key='password',
                type='password'
            )

            create_submit_button = st.form_submit_button(
                label='–î–æ–±–∞–≤–∏—Ç—å –ê–†–ú'
            )

            if create_submit_button:
                if not admin_password or admin_password != os.environ.get('ADMIN_PASSWORD'):
                    st.warning(
                        '–í–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å',
                        icon='‚ö†Ô∏è'
                    )
                else:
                    data: dict = {
                        'name': st.session_state.workstation_name,
                        'ip_address': st.session_state.ip_address,
                        'mac_address': st.session_state.mac_address,
                    }

                    try:
                        workstation_service.create(data)

                        st.success(
                            '–ê–†–ú —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞',
                            icon='‚úÖ'
                        )
                    except RuntimeError:
                        st.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏', icon='üö®')

    # Update table
    # --------------------------------------------------------------------------
    with update:
        st.header('–û–±–Ω–æ–≤–∏—Ç—å')

        select_workstation: list[Workstation] = st.selectbox(
            '–í—ã–±–µ—Ä–∏—Ç–µ –ê–†–ú',
            options=[workstation.name for workstation in workstations],
            key='select_workstation',
        )

        with st.form(key='edit_form'):
            edit_workstation_name: str = st.text_input(
                '–ò–º—è –ê–†–ú',
                key='edit_workstation_name',
                value=st.session_state.select_workstation
            )
            edit_ip_address: str = st.text_input(
                'IP –∞–¥—Ä–µ—Å',
                key='edit_ip_address'
            )
            edit_mac_address: str = st.text_input(
                'MAC –∞–¥—Ä–µ—Å',
                key='edit_mac_address'
            )
            edit_admin_password: str = st.text_input(
                '–ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
                key='edit_admin_password',
                type='password'
            )

            update_submit_button = st.form_submit_button(
                label='–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ê–†–ú'
            )

            if update_submit_button:
                if not edit_admin_password or edit_admin_password != os.environ.get('ADMIN_PASSWORD'):
                    st.warning(
                        '–í–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å',
                        icon='‚ö†Ô∏è'
                    )
                else:
                    old_data: dict = {
                        'name': st.session_state.select_workstation
                    }
                    update_data: dict = {
                        'name': st.session_state.edit_workstation_name,
                        'ip_address': st.session_state.edit_ip_address,
                        'mac_address': st.session_state.edit_mac_address,
                    }
                    try:
                        workstation_service.update(old_data, update_data)

                        st.success(
                            '–î–∞–Ω–Ω—ã–µ –ê–†–ú –æ–±–Ω–æ–≤–ª–µ–Ω—ã',
                            icon='‚úÖ'
                        )
                    except RuntimeError:
                        st.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', icon='üö®')

    # Delete table
    # --------------------------------------------------------------------------
    with delete:
        st.header('–£–¥–∞–ª–∏—Ç—å')

        with st.form(key='delete_form'):
            uid: int = st.number_input(
                'ID –ê–†–ú',
                key='uid',
                min_value=1
            )
            delete_admin_password: str = st.text_input(
                '–ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
                key='delete_password',
                type='password'
            )

            delete_submit_button: bool = st.form_submit_button(
                label='–£–¥–∞–ª–∏—Ç—å –ê–†–ú'
            )

            if delete_submit_button:
                if not delete_admin_password or delete_admin_password != os.environ.get('ADMIN_PASSWORD'):
                    st.warning(
                        '–í–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å',
                        icon='‚ö†Ô∏è'
                    )
                else:
                    workstation_service.delete(st.session_state.uid)

                    st.success(
                        '–ê–†–ú —É–¥–∞–ª–µ–Ω–∞',
                        icon='‚úÖ'
                    )
